% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recorder.R
\name{record_test}
\alias{record_test}
\title{Launch test event recorder for a Shiny app}
\usage{
record_test(
  app = ".",
  ...,
  seed = NULL,
  variant = os_name_and_r_version(),
  loadTimeout = 10000,
  debug = "shiny_console",
  shinyOptions = list()
)
}
\arguments{
\item{app}{A \code{\link[=ShinyDriver2]{ShinyDriver2()}} object, or path to a Shiny
application.}

\item{seed}{A random seed to set before running the app. This seed will also
be used in the test script.}

\item{variant}{If not-\code{NULL}, results will be saved in
_snaps/{variant}/{test.md}\verb{, so }variant` must be a single
string of alphanumeric characters suitable for use as a
directory name.

You can variants to deal with cases where the snapshot output
varies and you want to capture and test the variations.
Common use cases include variations for operating system, R
version, or version of key dependency.}

\item{loadTimeout}{Maximum time to wait for the Shiny application to load, in
milliseconds. If a value is provided, it will be saved in the test script.}

\item{debug}{start the underlying \code{\link[=ShinyDriver]{ShinyDriver()}} in \code{debug}
mode and print those debug logs to the R console once recording is
finished. The default, \code{'shiny_console'}, captures and prints R
console output from the recorded R shiny process. Any value that the
\code{debug} argument in \code{\link[=ShinyDriver]{ShinyDriver()}} accepts may be used
(e.g., \code{'none'} may be used to completely suppress the driver logs).}

\item{shinyOptions}{A list of options to pass to \code{runApp()}. If a value
is provided, it will be saved in the test script.}
}
\description{
Launch test event recorder for a Shiny app
}
