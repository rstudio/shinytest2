on:
  push:
    branches: [main, rc-**]
  pull_request:
    branches: [main]

name: R-CMD-check

jobs:
  rversions:
    name: R Versions
    runs-on: ubuntu-latest
    outputs:
      devel: ${{ steps.devel.outputs.installed-r-version }}
      release: ${{ steps.release.outputs.installed-r-version }}
      oldrel1: ${{ steps.oldrel1.outputs.installed-r-version }}
      oldrel2: ${{ steps.oldrel2.outputs.installed-r-version }}
      oldrel3: ${{ steps.oldrel3.outputs.installed-r-version }}
      oldrel4: ${{ steps.oldrel4.outputs.installed-r-version }}
    steps:
    - name: devel
      uses: r-lib/actions/setup-r@master
      id: devel
      with:
        r-version: devel
        install-r: false # No need to install. Just need version

    - name: release
      uses: r-lib/actions/setup-r@master
      id: release
      with:
        r-version: release
        install-r: false # No need to install. Just need version

    - name: oldrel/1
      uses: r-lib/actions/setup-r@master
      id: oldrel1
      with:
        r-version: oldrel/1
        install-r: false # No need to install. Just need version

    - name: oldrel/2
      uses: r-lib/actions/setup-r@master
      id: oldrel2
      with:
        r-version: oldrel/2
        install-r: false # No need to install. Just need version

    - name: oldrel/3
      uses: r-lib/actions/setup-r@master
      id: oldrel3
      with:
        r-version: oldrel/3
        install-r: false # No need to install. Just need version

    - name: oldrel/4
      uses: r-lib/actions/setup-r@master
      id: oldrel4
      with:
        r-version: oldrel/4
        install-r: false # No need to install. Just need version

    - name: Set Output
      id: set_versions
      run: |
        echo "devel: ${{ steps.devel.outputs.installed-r-version }}"
        echo "release: ${{ steps.release.outputs.installed-r-version }}"
        echo "oldrel1: ${{ steps.oldrel1.outputs.installed-r-version }}"
        echo "oldrel2: ${{ steps.oldrel2.outputs.installed-r-version }}"
        echo "oldrel3: ${{ steps.oldrel3.outputs.installed-r-version }}"
        echo "oldrel4: ${{ steps.oldrel4.outputs.installed-r-version }}"


  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    needs:
      - rversions
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: '${{ needs.rversions.outputs.release }}'}
          - {os: windows-latest, r: '${{ needs.rversions.outputs.release }}'}
          - {os: windows-latest, r: '3.6'}
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.devel }}', http-user-agent: "release" }
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.release }}'}
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.oldrel1 }}'}
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.oldrel2 }}'}
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.oldrel3 }}'}
          - {os: ubuntu-20.04,   r: '${{ needs.rversions.outputs.oldrel4 }}'}

    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck
          needs: website

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        shell: Rscript {0}
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check
